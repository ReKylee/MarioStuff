/* Condition List Panel Styles */
:root {
    --background-dark: rgb(45, 45, 45);
    --background-mid: rgb(55, 55, 55);
    --background-light: rgb(60, 60, 60);
    --border-light: rgba(255, 255, 255, 0.05);
    --border-highlight: rgba(255, 255, 255, 0.15);
    --text-light: rgb(220, 220, 220);
    --text-mid: rgb(150, 150, 150);
    --panel-shadow: 0 3px 5px rgba(0, 0, 0, 0.3);
    --border-radius-standard: 4px;
    --border-radius-small: 3px;
    --transition-standard: all 0.1s ease-out;

    /* Action colors */
    --button-primary: rgb(77, 117, 179);
    --button-primary-hover: rgb(97, 137, 199);
    --button-remove: rgba(150, 40, 40, 0.8);
    --button-remove-hover: rgb(180, 50, 50);

    /* Composite types */
    --composite-and: rgb(50, 150, 50);
    --composite-and-hover: rgb(60, 170, 60);
    --composite-or: rgb(150, 100, 50);
    --composite-or-hover: rgb(170, 110, 60);
    --composite-background: rgb(40, 45, 55);

    /* NOT button */
    --composite-not-color: rgb(150, 50, 70);
    --composite-not-hover: rgb(170, 60, 80);
    --composite-not-disabled: rgb(100, 100, 100);
    --composite-not-disabled-text: rgb(200, 200, 200);
    /* Interaction */
    --drag-indicator: rgb(77, 179, 255);
}

/* Base Container */
.conditions-panel {
    min-width: 350px;
    min-height: 300px;
}

/* Scroll Area */
.conditions-scroll-view {
    flex-grow: 1;
    flex-shrink: 1;
    padding: 8px;
    background-color: var(--background-dark);
    border-radius: var(--border-radius-small);
    min-width: 0;
    overflow: hidden;
    align-self: stretch;
    flex-direction: column;
}

/* Drop indicator */
.drop-indicator {
    height: 4px;
    background-color: var(--drop-indicator-color);
}

/* Make sure ScrollView contentContainer fills available width */
.conditions-scroll-view > .unity-scroll-view__content-container {
    width: 100%;
    min-width: 0;
    max-width: 100%;
    flex-grow: 1;
    flex-shrink: 1;
    align-self: stretch;
}

/* Condition Element */
.condition-element {
    flex-direction: row;
    align-items: center;
    padding: 10px;
    margin: 6px 0;
    background-color: var(--background-mid);
    border-radius: var(--border-radius-standard);
    border-width: 1px;
    border-color: var(--border-light);
    transition: var(--transition-standard);
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);
    flex-wrap: nowrap;
    min-width: 0;
    max-width: 100%;
    flex-basis: auto;
    justify-content: space-between;
    overflow: hidden;
    box-sizing: border-box;
    align-self: stretch;
}

.condition-element:hover {
    border-color: var(--border-highlight);
    background-color: var(--background-light);
    box-shadow: var(--panel-shadow);
}

/* Parameter Name Label */
.parameter-name-label {
    min-width: 80px;
    max-width: 200px;
    -unity-font-style: bold;
    color: var(--text-light);
    margin: 0;
    background-color: rgba(0, 0, 0, 0.15);
    padding: 4px 8px;
    border-radius: var(--border-radius-small);
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    -unity-text-align: middle-left;
    flex: 1 1 auto;
}

/* Comparison Button */
.comparison-button {
    font-size: 16px; /* Larger font for symbols */
    font-weight: bold;
    width: 40px;
    padding: 0 8px;
    margin: 0;
    border-radius: var(--border-radius-small);
    background-color: var(--button-primary);
    -unity-text-align: middle-center;
    color: white;
    border-width: 0;
    transition: var(--transition-standard);
    align-self: center;
}

.comparison-button:hover {
    background-color: var(--button-primary-hover);
    translate: 0 -1px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
}

.comparison-button:active {
    background-color: rgba(120, 120, 120, 0.9);
}

/* Make the comparison button non-interactive when disabled */
.comparison-button.non-interactive {
    opacity: 0.7;
    pointer-events: none;
}

/* Value Field */
.value-field {
    min-width: 80px;
    max-width: 200px;
    margin: 0;
    border-radius: 3px;
    padding: 3px 6px;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: rgba(0, 0, 0, 0.15);
    box-sizing: border-box;
    overflow: hidden;
    flex: 1 1 auto;
}

/* Middle Container */
.middle-container {
    flex-direction: row;
    flex-grow: 1;
    flex-shrink: 1;
    justify-content: space-between;
    align-items: center;
    margin-left: 5px;
    margin-right: 5px;
    min-width: 0;
    max-width: 100%;
    width: 100%;
    overflow: hidden;
}

/* Input fields inside value field */
.value-field .unity-base-field__input {
    min-width: 40px;
    max-width: 140px;
    width: 100%;
}

/* Make sure fields expand to fill available space */
.value-field .unity-base-field {
    width: 100%;
    flex-grow: 1;
    flex-shrink: 1;
    min-width: 0;
    margin: 0;
    padding: 2px;
}

/* Drag Handle */
.drag-handle {
    width: 24px;
    min-width: 24px;
    max-width: 24px;
    font-size: 18px;
    color: var(--drag-handle-color);
    cursor: move-arrow;
    -unity-text-align: middle-center;
    margin-right: 5px;
    transition: all 0.1s ease;
    flex: 0 0 auto;
}

.drag-handle:hover {
    color: white;
    scale: 1.1;
}

/* Remove Button */
.remove-button {
    width: 40px;
    min-width: 40px;
    max-width: 40px;
    height: 24px;
    background-color: var(--remove-button-color);
    color: white;
    border-radius: 3px;
    font-size: 16px;
    padding: 0;
    margin-left: 5px;
    transition: all 0.1s ease-out;
    border-width: 0;
    align-self: center;
    flex: 0 0 auto;
}

.remove-button:hover {
    background-color: rgb(180, 50, 50);
    scale: 1.1;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
}

/* Composite Condition Styles */
.composite-condition {
    background-color: var(--composite-background);
    border-left-width: 4px;
    margin: 8px 0;
    padding: 0;
    flex-direction: column;
    border-radius: var(--border-radius-standard);
    box-shadow: var(--panel-shadow);
}

.composite-and {
    border-left-color: var(--composite-and);
}

.composite-or {
    border-left-color: var(--composite-or);
}

.composite-header {
    padding: 10px;
    background-color: rgba(0, 0, 0, 0.2);
    border-top-left-radius: var(--border-radius-standard);
    border-top-right-radius: var(--border-radius-standard);
    align-self: stretch;
    width: 100%;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
    flex-wrap: nowrap;
}

/* Add this to create a container for header main content */
.composite-header-content {
    display: flex;
    flex-direction: row;
    align-items: center;
    flex-grow: 1;
    flex-shrink: 1;
    min-width: 0;
    overflow: hidden;
}

/* NOT Toggle Button */
:root {

}

.not-toggle {
    min-width: 70px;
    height: 26px;
    margin-right: 10px;
    padding: 2px 12px;
    border-radius: 13px;
    -unity-text-align: middle-center;
    -unity-font-style: bold;
    color: white;
    border-width: 0;
    transition: var(--transition-standard);
    background-color: var(--composite-not-color);
}

.not-toggle:hover {
    background-color: var(--composite-not-hover);
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
}

.not-toggle.disabled {
    background-color: var(--composite-not-disabled);
    color: var(--composite-not-disabled-text);
    cursor: initial;
}

.not-toggle.disabled:hover {
    background-color: var(--composite-not-disabled);
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
}

.composite-type-button {
    min-width: 70px;
    height: 26px;
    margin-right: 10px;
    padding: 2px 12px;
    border-radius: 13px;
    -unity-text-align: middle-center;
    -unity-font-style: bold;
    color: white;
    border-width: 0;
    transition: var(--transition-standard);
}

.and-type {
    background-color: var(--composite-and);
}

.and-type:hover {
    background-color: var(--composite-and-hover);
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
}

.or-type {
    background-color: var(--composite-or);
}

/* NOT composite header styling */
.composite-not .composite-header {
    background-color: rgba(150, 50, 70, 0.2); /* Use NOT color with transparency */
}

/* Improve spacing between header elements */
.composite-header > * {
    margin-right: 8px;
}

/* This space intentionally left blank - no longer using condition-content class */

.or-type:hover {
    background-color: var(--composite-or-hover);
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
}

/* NOT Toggle Button */
.not-toggle {
    min-width: 70px;
    height: 26px;
    margin-right: 10px;
    padding: 2px 12px;
    border-radius: 13px;
    -unity-text-align: middle-center;
    -unity-font-style: bold;
    color: white;
    border-width: 0;
    transition: var(--transition-standard);
    background-color: var(--composite-not-color);
}

.not-toggle:hover {
    background-color: var(--composite-not-hover);
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
}

.not-toggle.disabled {
    background-color: var(--composite-not-disabled);
    color: var(--composite-not-disabled-text);
    --drag-handle-color: rgb(150, 150, 150);
    --drop-indicator-color: rgba(77, 180, 255, 0.8);
    --remove-button-color: rgba(150, 40, 40, 0.8);
}

.not-toggle.disabled:hover {
    background-color: var(--composite-not-disabled);
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
}

.group-conditions-container {
    padding: 10px;
    margin: 0;
    border-width: 0;
    min-height: 40px;
    background-color: rgba(0, 0, 0, 0.1);
    border-bottom-left-radius: 4px;
    border-bottom-right-radius: 4px;
    width: 100%;
    align-self: stretch;
}

/* NOT indicator for composite conditions */
.not-indicator {
    position: absolute;
    top: -8px;
    right: -8px;
    width: 18px;
    height: 18px;
    background-color: var(--composite-not-color);
    border-radius: 9px;
    border-width: 2px;
    border-color: rgb(40, 45, 55);
    -unity-text-align: middle-center;
    color: white;
    font-size: 10px;
    -unity-font-style: bold;
}

/* Drop Indicator */
.drop-indicator {
    height: 4px;
    background-color: rgb(77, 179, 255);
    margin: 4px 0;
    border-radius: 2px;
    transition: all 0.2s ease;
}

.drop-target {
    background-color: rgba(77, 179, 255, 0.1);
    border-color: rgb(77, 179, 255);
    box-shadow: 0 0 8px rgba(77, 179, 255, 0.3);
}

.empty-state-label {
    padding: 20px;
    -unity-text-align: middle-center;
    color: rgb(150, 150, 150);
    -unity-font-style: italic;
    font-size: 14px;
    background-color: rgba(0, 0, 0, 0.1);
    border-radius: 4px;
    margin: 10px;
}

/* Toggle Styles for Boolean Conditions */
Toggle {
    margin-left: 5px;
    margin-right: 5px;
}

.value-field Toggle {
    margin: 0;
    align-self: center;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: 100%;
    flex-grow: 0;
    background-color: transparent;
}

.value-field Toggle .unity-toggle__input {
    width: 100%;
    height: 100%;
    background-color: transparent;
    margin: 0;
    padding: 0;
    justify-content: center;
    align-items: center;
}

.value-field Toggle .unity-toggle__checkmark {
    width: 16px;
    height: 16px;
    margin: 0;
    padding: 0;
    border-radius: 2px;
    background-color: rgba(40, 40, 40, 0.8);
    border-width: 1px;
    border-color: rgba(80, 80, 80, 0.8);
}

Toggle > .unity-toggle__input:checked > .unity-toggle__checkmark {
    background-color: rgb(77, 117, 179);
    border-color: rgb(77, 117, 179);
    border-width: 1px;
    border-radius: 2px;
}

Toggle:hover > .unity-toggle__input > .unity-toggle__checkmark {
    border-color: rgb(97, 137, 199);
    border-width: 1px;
}
